# This text file should explain how to deploy your website.

# You should write detailed description on:

# 1. All the packages you need to install
# 2. How to configure various servers (e.g., Nginx, Apache, etc)
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install python3-pip apache2 apache2-dev apache2-utils libapache2-mod-wsgi-py3 nginx
sudo pip3 install django Pillow djangorestframework djangorestframework-simplejwt django-phonenumber-field django-phonenumbers pytz django-filter drf-yasg django-cors-headers
sudo pip3 install gunicorn mod-wsgi
sudo apt install npm

### Backend - Apache
1. Added IP address as ALLOWED_HOSTS in project settings.py
2. Added static root in project settings.py
    STATIC_ROOT = os.path.join(BASE_DIR, 'static-root')
    STATICFILES_DIRS = [ BASE_DIR / 'static', ]
3. python3 manage.py makemigrations migrate collectstatic 

### Backend - Apache
1. Create config file /etc/apache2/sites-available/petpal.conf
    <VirtualHost *:8000 >
        ServerAdmin testemail@gmail.com
        ServerName 3.16.167.158
        DocumentRoot /var/www/petpal/backend/
        ErrorLog ${APACHE_LOG_DIR}/petpal.com_error.log
        CustomLog ${APACHE_LOG_DIR}/petpal.com_access.log combined
        Alias /static /var/www/petpal/backend/static-root
        <Directory /var/www/petpal/backend/static-root>
            Require all granted
        </Directory>
        Alias /media /var/www/petpal/backend/media
        <Directory /var/www/petpal/backend/media>
            Require all granted
        </Directory>
        <Directory /var/www/petpal/backend/petpal>
            <Files wsgi.py> 
                Require all granted
            </Files>
        </Directory>
        WSGIDaemonProcess petpal python-path=/var/www/petpal/backend python-home=/var/www/petpal/backend/venv
        WSGIProcessGroup petpal
        WSGIScriptAlias / /var/www/petpal/backend/petpal/wsgi.py
    </VirtualHost>
2. sudo a2ensite petpal.conf
3. systemctl reload apache2
4. sudo apache2ctl start

### Gunicorn bind
1. Create /etc/systemd/system/gunicorn.service 
    [Unit]
    Description=gunicorn daemon
    After=network.target
    [Service]
    User=www-data
    WorkingDirectory=/var/www/petpal/backend/
    ExecStart=gunicorn --bind 0.0.0.0:8000 petpal.wsgi
    [Install]
    WantedBy=multi-user.target
2. Create /etc/systemd/system/gunicorn.socket
    [Unit]
    Description=gunicorn socket
    [Socket]
    ListenStream=/run/gunicorn.sock
    [Install]
    WantedBy=sockets.target
3. sudo systemctl start gunicorn.socket
4. sudo systemctl enable gunicorn.socket
5. sudo systemctl restart gunicorn
5. sudo systemctl daemon-reload

### Frontend
1. Update REST API calls to server IP
2. npm install
3. npm run build

### Frontend - nginx
1. Create /etc/nginx/sites-available/petpal_nginx
    server {
        listen 80;
        server_name 3.16.167.158;
        location = /favicon.ico {
          access_log off;
          log_not_found off;
        }
        location /media/ {
          root /var/www/petpal/backend;
        }
        location / {
          root /var/www/petpal/frontend/build;
          try_files $uri /index.html;
        }
    }
2. sudo ln -s /etc/nginx/sites-available/petpal_nginx /etc/nginx/sites-enabled
3. sudo systemctl daemon-reload
4. sudo service nginx restart

### Location
1. Place project folder under /var/www/
2. sudo chown -R www-data:www-data /var/www/petpal

### EC2 dashboard/network & security
1. Add inbound rule for TCP protocol on port 8000